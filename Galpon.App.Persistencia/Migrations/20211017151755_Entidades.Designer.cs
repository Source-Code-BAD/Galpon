// <auto-generated />
using System;
using Galpon.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Galpon.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211017151755_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Galpon.App.Dominio.AssignedShed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("employerid")
                        .HasColumnType("int");

                    b.Property<int?>("shedid")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("employerid");

                    b.HasIndex("shedid");

                    b.ToTable("AssignedSheds");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Employer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("complete_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("number_doc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rolid")
                        .HasColumnType("int");

                    b.Property<int?>("type_docid")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("rolid");

                    b.HasIndex("type_docid");

                    b.HasIndex("userid");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Historical", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("employerid")
                        .HasColumnType("int");

                    b.Property<string>("food")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity_eggs")
                        .HasColumnType("int");

                    b.Property<int?>("shedid")
                        .HasColumnType("int");

                    b.Property<string>("sick_chickens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("temperature")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("water")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("employerid");

                    b.HasIndex("shedid");

                    b.ToTable("Historicals");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Shed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("admission_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("departure_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total_animals")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Sheds");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Suggestion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("employerid")
                        .HasColumnType("int");

                    b.Property<int?>("shedid")
                        .HasColumnType("int");

                    b.Property<string>("suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("employerid");

                    b.HasIndex("shedid");

                    b.ToTable("Suggestions");
                });

            modelBuilder.Entity("Galpon.App.Dominio.TypeDoc", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("TypeDocs");
                });

            modelBuilder.Entity("Galpon.App.Dominio.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("user")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Galpon.App.Dominio.AssignedShed", b =>
                {
                    b.HasOne("Galpon.App.Dominio.Employer", "employer")
                        .WithMany()
                        .HasForeignKey("employerid");

                    b.HasOne("Galpon.App.Dominio.Shed", "shed")
                        .WithMany()
                        .HasForeignKey("shedid");

                    b.Navigation("employer");

                    b.Navigation("shed");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Employer", b =>
                {
                    b.HasOne("Galpon.App.Dominio.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("rolid");

                    b.HasOne("Galpon.App.Dominio.TypeDoc", "type_doc")
                        .WithMany()
                        .HasForeignKey("type_docid");

                    b.HasOne("Galpon.App.Dominio.User", "user")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("rol");

                    b.Navigation("type_doc");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Historical", b =>
                {
                    b.HasOne("Galpon.App.Dominio.Employer", "employer")
                        .WithMany()
                        .HasForeignKey("employerid");

                    b.HasOne("Galpon.App.Dominio.Shed", "shed")
                        .WithMany()
                        .HasForeignKey("shedid");

                    b.Navigation("employer");

                    b.Navigation("shed");
                });

            modelBuilder.Entity("Galpon.App.Dominio.Suggestion", b =>
                {
                    b.HasOne("Galpon.App.Dominio.Employer", "employer")
                        .WithMany()
                        .HasForeignKey("employerid");

                    b.HasOne("Galpon.App.Dominio.Shed", "shed")
                        .WithMany()
                        .HasForeignKey("shedid");

                    b.Navigation("employer");

                    b.Navigation("shed");
                });
#pragma warning restore 612, 618
        }
    }
}
